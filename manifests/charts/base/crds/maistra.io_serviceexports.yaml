
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: serviceexports.maistra.io
spec:
  group: maistra.io
  names:
    kind: ServiceExports
    listKind: ServiceExportsList
    plural: serviceexports
    singular: serviceexports
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceExport is the Schema for configuring exported services.  The
        name of the ServiceExports resource must match the name of a MeshFederation
        resource defining the remote mesh to which the services will be exported.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines rules for matching services to be exported.
          properties:
            exports:
              description: Exports are the rules that determine which services are
                exported from the mesh.  The list is processed in order and the first
                spec in the list that applies to a service is the one that will be
                applied.  This allows more specific selectors to be placed before
                more general selectors.
              items:
                properties:
                  labelSelector:
                    description: LabelSelector provides a mechanism for selecting
                      services to export by using a label selector to match Service
                      resources for export.
                    properties:
                      aliases:
                        description: 'Aliases is a map of aliases to apply to exported
                          services.  If a name is not found in the map, the original
                          service name is exported.  A ''*'' will match any name.
                          The Aliases list will be processed in order, with the first
                          match found being applied to the exported service. Examples:
                          */foo->*/bar will match foo service in any namesapce, exporting
                          it as bar from its original namespace. */foo->bar/bar will
                          match foo service in any namespace, exporting it as bar/bar.
                          foo/*->bar/* will match any service in foo namespace, exporting
                          it from the bar namespace with its original name */*->bar/*
                          will match any service and export it from the bar namespace
                          with its original name. */*->*/* is the same as not specifying
                          anything'
                        items:
                          properties:
                            alias:
                              properties:
                                names:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            name:
                              properties:
                                names:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        type: array
                      namespace:
                        description: Namespace specifies to which namespace the selector
                          applies.  An empty value applies to all namespaces in the
                          mesh.
                        type: string
                      selector:
                        description: Selector used to select Service resources in
                          the namespace/mesh.  An empty selector selects all services.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  nameSelector:
                    description: NameSelector provides a simple name matcher for exporting
                      services in the mesh.
                    properties:
                      alias:
                        properties:
                          names:
                            type: string
                          namespace:
                            type: string
                        type: object
                      name:
                        properties:
                          names:
                            type: string
                          namespace:
                            type: string
                        type: object
                    type: object
                  type:
                    type: string
                required:
                - type
                type: object
              type: array
          type: object
        status:
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
